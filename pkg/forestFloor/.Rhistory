Col = fcol(ff,X.matrix=F,3:4)
show3d_new(ff,1:2,col=Col,surf.rgl.args=list())
Col = fcol(ff,X.matrix=F,3)
show3d_new(ff,3:4,col=Col,surf.rgl.args=list())
obs=5000
vars = 6
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 0.2 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1500,ntree=1500)
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
#plot partial functions of most important variables first
plot(ff,plot_seq=NULL,colour_by="dummy, no defined color-template",col_axis=1)
#Non interacting functions are well displayed, whereas X3 and X4 are not
#by applying different colourgradient, interactions reveal themself
Colours = fcol(ff,1)
plot(ff,plot_seq=NULL,colour_by=3,col_axis=1,external.col=Colours)
#in 3D the interaction between X3 and X reveals itself completely
Colours = fcol(ff,3)
plot(ff,plot_seq=NULL,colour_by=3,col_axis=1,external.col=Colours)
show3d(ff,x_cols=3,y_cols=4,z_cols=3:4,k=15)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col)
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col)
library(forestFloor)
show3d_new(ff,3:4,col=Col)
obs=10000
vars = 6
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 0.2 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1500,ntree=1500)
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
#plot partial functions of most important variables first
plot(ff,plot_seq=NULL,colour_by="dummy, no defined color-template",col_axis=1)
#Non interacting functions are well displayed, whereas X3 and X4 are not
#by applying different colourgradient, interactions reveal themself
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col)
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 5.2 * rnorm(obs))
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1500,ntree=1500)
rfo
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
#plot partial functions of most important variables first
Col = fcol(ff,3)
plot(ff,external.col=Col)
show3d_new(ff,3:4,col=Col)
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 12.2 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1500,ntree=1500)
rfo
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
#plot partial functions of most important variables first
plot(ff,plot_seq=NULL,colour_by="dummy, no defined color-template",col_axis=1)
#Non interacting functions are well displayed, whereas X3 and X4 are not
#by applying different colourgradient, interactions reveal themself
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col)
Col = fcol(ff,X.m=F,2)
show3d_new(ff,1:2,col=Col)
Col = fcol(ff,5)
show3d_new(ff,5:6,col=Col)
show3d_new(ff,c(1,6),col=Col)
show3d_new(ff,c(1,5),col=Col)
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1000,ntree=2500)
rfo
ff = forestFloor(rfo,X)
Col = fcol(ff,3)
plot(ff,external.col=Col)
plot(ff,plot_seq=NULL,colour_by="dummy, no defined color-template",col_axis=1)
show3d_new(ff,3:4,col=Col)
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 0 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1000,ntree=2500)
#compute topology
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
Col = fcol(ff,3)
plot(ff,external.col=Col)
show3d_new(ff,3:4,col=Col)
show3d_new(ff,c(1,2),col=Col)
Col = fcol(ff,1)
show3d_new(ff,c(1,1),col=Col)
show3d_new(ff,c(1,2),col=Col)
Col = fcol(ff,c(1,2))
Col = fcol(ff,c(1,2))
show3d_new(ff,c(1,2),col=Col)
show3d_new(ff,c(1,2,3),col=Col)
Col = fcol(ff,c(1,2,3))
show3d_new(ff,c(1,2),col=Col)
Col = fcol(ff,c(1,4,3))
show3d_new(ff,c(1,2),col=Col)
Col = fcol(ff)
show3d_new(ff,c(1,2),col=Col)
show3d_new(ff,c(1,3),col=Col)
show3d_new(ff,c(2,3),col=Col)
Col = fcol(ff,3)
show3d_new(ff,c(2,3),col=Col)
show3d_new(ff,c(2,4),col=Col)
obs=500
vars = 6
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 0 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1000,ntree=2500)
#compute topology
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
#plot partial functions of most important variables first
plot(ff,plot_seq=NULL,colour_by="dummy, no defined color-template",col_axis=1)
#Non interacting functions are well displayed, whereas X3 and X4 are not
#by applying different colourgradient, interactions reveal themself
Col = fcol(ff,1)
plot(ff,external.col=Col)
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col)
Col = fcol(ff,1:2,X.m=F)
plot(ff,external.col=Col)
Col = fcol(ff,1:2,X.m=F,RGB=T)
plot(ff,external.col=Col)
Col = fcol(ff,1:3,X.m=F,RGB=T)
plot(ff,external.col=Col)
Col = fcol(ff,1:2,X.m=F,RGB=T)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col)
obs=250
vars = 6
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 0 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,ntree=2500)
#compute topology
ff = forestFloor(rfo,X)
rfo
#plot partial functions of most important variables first
plot(ff,plot_seq=NULL,colour_by="dummy, no defined color-template",col_axis=1)
#Non interacting functions are well displayed, whereas X3 and X4 are not
#by applying different colourgradient, interactions reveal themself
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col)
#although no interaction, a joined additive effect of X1 and X2
#can also be informative to display in 3D
Col = fcol(ff,1:2,X.m=F,RGB=T)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col)
obs=2500
vars = 6
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 0 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,ntree=2500)
#compute topology
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
#plot partial functions of most important variables first
plot(ff,plot_seq=NULL,colour_by="dummy, no defined color-template",col_axis=1)
#Non interacting functions are well displayed, whereas X3 and X4 are not
#by applying different colourgradient, interactions reveal themself
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col)
Col = fcol(ff,1:2,X.m=F,RGB=T)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col)
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, -X1^2 + sin(X2*pi) + 2 * X3 * X4 + 0 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1000,ntree=500)
#compute topology
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
#plot partial functions of most important variables first
plot(ff,plot_seq=NULL,colour_by="dummy, no defined color-template",col_axis=1)
#Non interacting functions are well displayed, whereas X3 and X4 are not
#by applying different colourgradient, interactions reveal themself
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col)
#although no interaction, a joined additive effect of X1 and X2
#can also be informative to display in 3D
Col = fcol(ff,1:2,X.m=F,RGB=T)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col)
rm(list=ls())
library(forestFloor)
#simulate data
obs=2500
vars = 6
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 1 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1000,ntree=500)
#compute topology
ff = forestFloor(rfo,X)
rfo
rm(list=ls())
library(forestFloor)
#simulate data
obs=2500
vars = 6
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 1 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1500,ntree=500)
#compute topology
ff = forestFloor(rfo,X)
rfo
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
#plot partial functions of most important variables first
plot(ff,plot_seq=NULL,colour_by="dummy, no defined color-template",col_axis=1)
#Non interacting functions are well displayed, whereas X3 and X4 are not
#by applying different colourgradient, interactions reveal themself
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col)
Col = fcol(ff,1:2,X.m=F,RGB=T) # here we colour by FC-component FC1 and FC2 summed
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col)
Col = fcol(ff,1:2,X.m=F)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col)
Col = fcol(ff,1:2,X.m=T)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col)
show3d_new(ff,1:2,col=Col,size=5)
args(show3d_new)
show3d_new(ff,1:2,col=Col,plot.r=list(size=5) )
Col = fcol(ff,1:2,X.m=T,alpha=0.8)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col,plot.r=list(size=6))
Col = fcol(ff,3:4)
plot(ff,external.col=Col)
show3d_new(ff,3:4,col=Col,plot.r=list(size=6))
Col = fcol(ff,3)
plot(ff,external.col=Col)
Col = fcol(ff,3,rgb=F)
Col = fcol(ff,3,RGB=F)
plot(ff,external.col=Col)
show3d_new(ff,3:4,col=Col,plot.r=list(size=6))
Col = fcol(ff,3,RGB=F,hue=.33)
plot(ff,external.col=Col)
Col = fcol(ff,3,RGB=F,hue=.333/2)
plot(ff,external.col=Col)
Col = fcol(ff,3,RGB=F,hue=.666/2)
plot(ff,external.col=Col)
Col = fcol(ff,3,RGB=F,hue=.999/2)
plot(ff,external.col=Col)
Col = fcol(ff,3,RGB=F,hue=.5)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,3),RGB=F,hue=.5)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,3),RGB=F,hue=0)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,3),RGB=F,hue=.33)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,3),RGB=F,hue=.33,hue.range=2)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,3),RGB=F,hue=.33,hue.range=.5)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,3),RGB=F,hue=.33,hue.range=1.2)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,3),RGB=F,hue=.33,hue.range=7)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,3),RGB=F,hue=.33,hue.range=2)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,3,3),RGB=F,hue=.33,hue.range=1)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,3,2),RGB=F,hue=.33,hue.range=1)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,2),RGB=F,hue=.33,hue.range=1)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,4),RGB=F,hue=.33,hue.range=1)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,4),RGB=F,hue=.33,hue.range=2)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,4),RGB=F,hue.range=2)
Col = fcol(ff,c(3,4,3,4),RGB=F,hue.range=2)
Col = fcol(ff,c(3,4,3,4),RGB=F,hue.range=1)
plot(ff,external.col=Col)
show3d_new(ff,3:4,col=Col,plot.r=list(size=6))
Col = fcol(ff,c(3,4,3,4,1),RGB=F,hue.range=1)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col,plot.r=list(size=6))
Col = fcol(ff,c(3,4,3,4,1),RGB=F,hue.range=1.1)
plot(ff,external.col=Col)
Col = fcol(ff,c(3,4,3,4,1),RGB=F,hue.range=1.2)
Col = fcol(ff,c(3,4,3,4,1),RGB=F,hue.range=2.2)
Col = fcol(ff,c(3,4,3,4,1),RGB=F,hue.range=1.8)
Col = fcol(ff,c(3,4,3,4,1),RGB=F,hue.range=1.4)
Col = fcol(ff,c(3,4,3,4,1),RGB=F,hue.range=1.7)
Col = fcol(ff,c(3,4,3,4,1),RGB=F,hue.range=1.79)
Col = fcol(ff,c(3,4,3,4,1),RGB=F,hue.range=1.75)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col,plot.r=list(size=6))
Col = fcol(ff,c(3,4),RGB=F,hue.range=1.75)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col,plot.r=list(size=6))
Col = fcol(ff)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col,plot.r=list(size=6))
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col,plot.r=list(size=6))
rm(list=ls())
library(forestFloor)
#simulate data
obs=2500
vars = 6
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 1 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1500,ntree=500)
#compute topology
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
#plot partial functions of most important variables first
plot(ff)
#Non interacting functions are well displayed, whereas X3 and X4 are not
#by applying different colourgradient, interactions reveal themself
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col,plot.r=list(size=6))
#although no interaction, a joined additive effect of X1 and X2
#can also be informative to display in 3D
Col = fcol(ff,1:2,X.m=F,RGB=T) # here we colour by FC-component FC1 and FC2 summed
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col)
# here two-way gradient is formed from by FC-component FC1 and FC2.
Col = fcol(ff,1:2,X.m=T,alpha=0.8)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col,plot.r=list(size=6))
Col = fcol(ff,1:2,X.m=F,RGB=T) # here we colour by FC-component FC1 and FC2 summed
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col)
Col = fcol(ff,1:2,X.m=T,alpha=0.8)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col,plot.r=list(size=6))
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col,plot.rgl=list(size=5))
#although no interaction, a joined additive effect of X1 and X2
Col = fcol(ff,1:2,X.m=F,RGB=T) #colour by FC-component FC1 and FC2 summed
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col,plot.rgl=list(size=5))
#...or two-way gradient is formed from FC-component X1 and X2.
Col = fcol(ff,1:2,X.m=T,alpha=0.8)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col,plot.rgl=list(size=5))
show3d_new(ff,1:2,col=Col,plot.rgl=list(size=5))
rm(list=ls())
library(forestFloor)
#simulate data
obs=2500
vars = 6
X = data.frame(replicate(vars,rnorm(obs)))
Y = with(X, X1^2 + sin(X2*pi) + 2 * X3 * X4 + 1 * rnorm(obs))
#grow a forest, remeber to include inbag
rfo=randomForest(X,Y,keep.inbag = TRUE,sampsize=1500,ntree=500)
#compute topology
ff = forestFloor(rfo,X)
#print forestFloor
print(ff)
#plot partial functions of most important variables first
plot(ff)
#Non interacting functions are well displayed, whereas X3 and X4 are not
#by applying different colourgradient, interactions reveal themself
Col = fcol(ff,3)
plot(ff,external.col=Col)
#in 3D the interaction between X3 and X reveals itself completely
show3d_new(ff,3:4,col=Col,plot.rgl=list(size=5))
#although no interaction, a joined additive effect of X1 and X2
Col = fcol(ff,1:2,X.m=FALSE,RGB=TRUE) #colour by FC-component FC1 and FC2 summed
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col,plot.rgl=list(size=5))
#...or two-way gradient is formed from FC-component X1 and X2.
Col = fcol(ff,1:2,X.matrix=TRUE,alpha=0.8)
plot(ff,external.col=Col)
show3d_new(ff,1:2,col=Col,plot.rgl=list(size=5))
library(forestFloor)
library(forestFloor)
library(randomForest)
library(ffData)
library(rfFC)
data(abalone)
names(abalone)
X=abalone[,-c(9)]
Y=abalone[, 9]
rfo=randomForest(X,Y,keep.inbag=T,ntree=500,mtry=3,sampsize=500,importance=T)
ff = forestFloor(rfo,X)
Colours = fcol(ff,cols=c(1,8),imp.weight=FALSE,RGB=T)
rm(fcol)
Colours = fcol(ff,cols=c(1,8),imp.weight=FALSE,RGB=T)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,external.col=Colours)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Colours)
plot.forestFloor
args(plot.forestFloor)
library(forestFloor)
Col = fcol(ff,cols=c(1,8),imp.weight=FALSE,RGB=T)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Colours)
show3d(ff,x_cols=1, y_cols=8, z_cols= c(8), order_by_importance=T,size.obs=3,alpha.obs=.6)
Col = fcol(ff,cols=c(1,7),imp.weight=FALSE,RGB=T)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Colours)
show3d_new(ff,x_cols=1, y_cols=8, z_cols= c(8), order_by_importance=T,size.obs=3,alpha.obs=.6,col=Col)
show3d_new(ff,c(1,8),col=Col)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
show3d_new(ff,c(1,8),col=Col)
Col = fcol(ff,cols=c(2,7),imp.weight=FALSE,RGB=T)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
show3d_new(ff,c(2,7),col=Col)
names(X)
Col = fcol(ff,cols=c(6,8),imp.weight=F)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
show3d_new(ff,c(2,7),col=Col)
Col = fcol(ff)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.9)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.9,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.6,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.75,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.99,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.85,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.9,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
show3d_new(ff,c(6,8),col=Col)
show3d_new(ff,c(6,7),col=Col)
show3d_new(ff,c(8,7),col=Col)
show3d_new(ff,c(8,5),col=Col)
show3d_new(ff,c(8,4),col=Col)
show3d_new
show3d_new(ff,c(8,4),col=Col,limit=2)
show3d_new(ff,c(8,4),col=Col,limit=1)
args(plot.forestFloor)
col
Col = fcol(ff,satu=.9,alpha=.3,hue=.33)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.9,alpha=.3,hue=.66)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.9,alpha=.3,hue=.5)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.9,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,satu=.9,alpha=.3,RGB=T)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,1,satu=.9,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,8,satu=.9,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,1,satu=.9,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,8,satu=.9,alpha=.3)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,8,satu=.9,alpha=.3,hue.range=5)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,8,satu=.9,alpha=.3,hue.range=5,RGB=F)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,8,satu=.9,alpha=.3,hue.range=5,RGB=F)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,8,satu=.9,alpha=.3,hue.range=7,RGB=F)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,8,satu=.9,alpha=.3,hue.range=3,RGB=F)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
Col = fcol(ff,8,satu=.9,alpha=.3,hue.range=3,RGB=F,brightness=.9)
plot(ff,cropXaxes=c(2,4:5),crop_limit=3.8,col=Col)
show3d_new(ff,c(6,8),col=Col)
show3d_new(ff,c(6,8),FCi=6,col=Col)
show3d_new(ff,c(6,8),FCi=c(6,8),col=Col)
