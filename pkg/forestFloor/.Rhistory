hist(apply(FCs,c(1,3),sum)[,i] / 500 + base.rate[,i],breaks=100)
hist(pred.rate[,i])
# FCs[,,i] = FCs / apply(rf$inbag,1,sum)
}
print(max(apply(FCs,c(1,3),sum)[,i] / 500 + base.rate[,i]))
base.rate = (t(replicate(obs,table(Yclass)/length(Yclass))))
pred.rate = rf$votes
Xvars=c(1,2)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j] / 1500 + 1
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=100))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add)
#   points3d(x=ff$X[,Xvars[1]],
#            y=ff$X[,Xvars[2]],
#            z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=2)
}
Xvars=c(1,2)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j] / 1500 + 1
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1.3,grid=50,limit=5,user=alist(k=10))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add)
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=2)
}
Xvars=c(1,2)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j] / 1500 + 1
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1.3,grid=50,limit=5,user=alist(k=10))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add)
#    points3d(x=ff$X[,Xvars[1]],
#             y=ff$X[,Xvars[2]],
#             z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=2)
}
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=2)
Xvars[1]]
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
j=1
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j] / 1500 + 1
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
if(j == 1) add=FALSE else add=TRUE
ff$X[,Xvars[1]]
ff$X[,Xvars[2]]
Xvars=c(3,4)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j] / 1500 + 1
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add)
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=2)
}
apply(FCs[,Xvars,j],1,sum)
grid
ff=c()
ff$X = X
ff$X
Xspec  = ff$X[,]
Xspec
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add)
grid
add
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add)
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=2)
}
Xvars=c(3,4)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add)
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=3)
}
Xvars=c(1,2)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add)
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=3)
}
Xvars=c(1,3)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add)
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=3)
}
names(X)
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add,xlab=names(X)[Xvars[1]])
Xvars=c(1,2)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add,
xlab=names(X)[Xvars[1]],
ylab=names(X)[Xvars[2]])
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=3)
}
table(Yclass)
Xvars=c(1,2)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j] / 500 + table(Yclass)[j]/length(Yclass)
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add,
xlab=names(X)[Xvars[1]],
ylab=names(X)[Xvars[2]])
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum),col=j,alpha=0.3,size=3)
}
Xvars=c(1,2)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j] / 500 + table(Yclass)[j]/length(Yclass)
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add,
xlab=names(X)[Xvars[1]],
ylab=names(X)[Xvars[2]])
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum)/500 + table(Yclass)[j]/length(Yclass)
,col=j,alpha=0.3,size=3)
}
table(Yclass)[j]/length(Yclass)
i=1
print(max(apply(FCs,c(1,3),sum)[,i] / 500 + base.rate[,i]))
hist(apply(FCs,c(1,3),sum)[,i] / 500 + base.rate[,i],breaks=100)
base.rate = (t(replicate(obs,table(Yclass)/length(Yclass))))
pred.rate = rf$votes
hist(apply(FCs,c(1,3),sum)[,i] / 500 + base.rate[,i],breaks=100)
Xvars=c(1,2)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j] / 1500 + table(Yclass)[j]/length(Yclass)
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add,
xlab=names(X)[Xvars[1]],
ylab=names(X)[Xvars[2]])
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum)/1500 + table(Yclass)[j]/length(Yclass)
,col=j,alpha=0.3,size=3)
}
FCs = RFCV_contribution(X,Yclass,.ntree=1500,parallel=F,fold=4,reps=2)
table(Yclass)[j]/length(Yclass)
Xvars=c(1,2)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add,
xlab=names(X)[Xvars[1]],
ylab=names(X)[Xvars[2]])
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum)+ table(Yclass)[j]/length(Yclass)
,col=j,alpha=0.3,size=3)
}
Xvars=c(3,4)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add,
xlab=names(X)[Xvars[1]],
ylab=names(X)[Xvars[2]])
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum)+ table(Yclass)[j]/length(Yclass)
,col=j,alpha=0.3,size=3)
}
Xvars=c(3,4)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add,
xlab=names(X)[Xvars[1]],
ylab=names(X)[Xvars[2]])
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum)+ table(Yclass)[j]/length(Yclass)
,col=j,alpha=0.3,size=4)
}
rm(list=ls())
data(iris)
library(randomForest)
library(rgl)
library(rfFC)
library(abind)
library(foreach)
library(forestFloor)
library(parallel)
library(doParallel)
source('~/Documents/PHD/Rlocal/multiCCrossVal.R')
dim(iris)
#iris data
X = iris[-(1:2),1:4]
Yclass = iris$Species[-(1:2)]
classes = levels(Yclass)
obs = dim(X)[1]
vars = dim(X)[2]
FCs = RFCV_contribution(X,Yclass,.ntree=1500,parallel=F,fold=4,reps=2)
for(i in 1:4) {
for(j in 1:length(classes)) {
#species.indices = iris$Species==levels(iris$Species)[j]
if(j==1) paint=plot else paint=points
paint(x = X[,i],
y = FCs [,i,j],
col=j,cex=0.5)
}
}
j=1
pars = par(no.readonly=TRUE)
par(mar=c(4,4,2,2),mfrow=c(2,2))
for(i in 1:4) {
for(j in 1:length(classes)) {
#species.indices = iris$Species==levels(iris$Species)[j]
if(j==1) paint=plot else paint=points
paint(x = X[,i],
y = FCs [,i,j],
col=j,cex=0.5)
}
}
j=1
rgb(c(0,0,0),c(0,1,0),c(0,0,1),alpha=0.2))[j]
rgb(c(0,0,0),c(0,1,0),c(0,0,1),alpha=0.2)
for(i in 1:4) {
for(j in 1:length(classes)) {
#species.indices = iris$Species==levels(iris$Species)[j]
if(j==1) paint=plot else paint=points
paint(x = X[,i],
y = FCs [,i,j],
col=rgb(c(0,0,0),c(0,1,0),c(0,0,1),alpha=0.2)[j],cex=0.5)
}
}
for(i in 1:4) {
for(j in 1:length(classes)) {
#species.indices = iris$Species==levels(iris$Species)[j]
if(j==1) paint=plot else paint=points
paint(x = X[,i],
y = FCs [,i,j],
col=rgb(c(0,1,0),c(0,0,1),c(0,0,0),alpha=0.2)[j],cex=0.5)
}
}
for(i in 1:4) {
for(j in 1:length(classes)) {
#species.indices = iris$Species==levels(iris$Species)[j]
if(j==1) paint=plot else paint=points
paint(x = X[,i],
y = FCs [,i,j],
col=rgb(c(0,1,0),c(0,0,1),c(0,0,0),alpha=0.6)[j],cex=0.5)
}
}
for(i in 1:4) {
for(j in 1:length(classes)) {
#species.indices = iris$Species==levels(iris$Species)[j]
if(j==1) paint=plot else paint=points
paint(x = X[,i],
y = FCs [,i,j],
col=rgb(c(0,1,0),c(0,0,1),c(0,0,0),alpha=0.6)[j],cex=0.5)
}
}
for(i in 1:4) {
for(j in 1:length(classes)) {
#species.indices = iris$Species==levels(iris$Species)[j]
if(j==1) paint=plot else paint=points
paint(x = X[,i],
y = FCs [,i,j]/1500,
col=rgb(c(0,1,0),c(0,0,1),c(0,0,0),alpha=0.6)[j],cex=0.5)
}
}
for(i in 1:4) {
for(j in 1:length(classes)) {
#species.indices = iris$Species==levels(iris$Species)[j]
if(j==1) paint=plot else paint=points
paint(x = X[,i],
y = FCs [,i,j]/1500+table(Yclass)[i]/length(Yclass),
col=rgb(c(0,1,0),c(0,0,1),c(0,0,0),alpha=0.6)[j],cex=0.5)
}
}
par(mar=c(4,4,2,2),mfrow=c(2,2))
table(Yclass)[i]/length(Yclass)
table(Yclass)
length(Yclass)
for(i in 1:4) {
for(j in 1:length(classes)) {
#species.indices = iris$Species==levels(iris$Species)[j]
if(j==1) paint=plot else paint=points
paint(x = X[,i],
y = FCs [,i,j]/1500+table(Yclass)[j]/length(Yclass),
col=rgb(c(0,1,0),c(0,0,1),c(0,0,0),alpha=0.6)[j],cex=0.5)
}
}
Xvars=c(3,4)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]/1500+table(Yclass)[j]/length(Yclass)
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add,
xlab=names(X)[Xvars[1]],
ylab=names(X)[Xvars[2]])
#   points3d(x=ff$X[,Xvars[1]],
#              y=ff$X[,Xvars[2]],
#              z=apply(FCs[,Xvars,j],1,sum)+ table(Yclass)[j]/length(Yclass)
#            ,col=j,alpha=0.3,size=4)
}
Xvars=c(3,4)
for(j in 1:3) {
ff=c()
ff$X = X
#Species.ind = iris$Species==levels(iris$Species)[j]
Xspec  = ff$X[,]
print(apply(Xspec,2,mean))
ff$FCmatrix = FCs[,,j]
class(ff) = "forestFloor"
grid = convolute_grid(ff=ff,Xvars=Xvars,zoom=1,grid=50,limit=5,user=alist(k=20))
#FC_con = convolute_ff2(ff=ff,Xvars=Xvars,user=alist(k=50))
if(j == 1) add=FALSE else add=TRUE
persp3d(x=unique(grid[,2]),
y=unique(grid[,3]),
z=grid[,1],col=j,alpha=0.3,add=add,
xlab=names(X)[Xvars[1]],
ylab=names(X)[Xvars[2]])
points3d(x=ff$X[,Xvars[1]],
y=ff$X[,Xvars[2]],
z=apply(FCs[,Xvars,j],1,sum)+ table(Yclass)[j]/length(Yclass)
,col=j,alpha=0.3,size=4)
}
